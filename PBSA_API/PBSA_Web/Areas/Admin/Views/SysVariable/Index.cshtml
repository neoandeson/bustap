@{
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
}
<link href="~/css/mycss.css" rel="stylesheet" />
<link href="~/css/mytable.css" rel="stylesheet" />
<link href="~/css/carousel.css" rel="stylesheet" />
<title>PBSA | Configuation</title>

<div class="container-fluid">
    <div class="bgc-white bd bdrs-3 p-20 mB-20">
        <div class="row">
            <div class="col-md-12">
                <table style="width: 100%">
                    <tr>
                        <td style="width: 62%"><h2 style="padding-left: 18em" class="c-grey-900 mT-10 mB-30">System Configuration</h2></td>
                        <td>
                            <div style="float: left; font-size: 2em">Current system time : &nbsp;</div><div id="txt" style="font-size: 3em;float: right;margin-top: -0.3em;"</div>
                        </td>
                    </tr>
                </table>
                <div>
                    <table id="sysvarTable" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Name</th>
                                <th>Value</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>

<script src="~/lib/jquery/dist/jquery.js" type="text/javascript"></script>
<script src="~/js/common.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script type="text/javascript">
    var currentSystemTime;

    $(document).ready(function () {
        DrawTable();
        StartTime();
    });

    const VARIABLE_LANGUAGES = {
        "CustomerLatencyMinutes": "Khách được trễ tối đa (phút)",
        "BeforeChangeSlotMinutes": "Cho phép khách đặt lại thời gian trước (phút)",
        "BarberLatencyPercentage": "Phần trăm thời gian thợ được phép trễ so với tổng thời gian lịch hẹn (%)",
        "CheckoutAcceptableLateMinute": "Số phút checkout trễ tối đa (phút)",
        "CheckoutAcceptableViolationMinute": "Số phút checkout vi phạm lịch hẹn tiếp theo tối đa (phút)",
        "MinimumBalance": "Số dư tối thiểu trong ví người dùng (vnd)",
        "BookingReservationAmount": "Mức tiền cọc cơ bản (vnd)",
        "ArrivingTimeDeviation": "Sai số thời gian di chuyển (sử dụng Google API) (%)",
        "CheckinAcceptableDistance": "Phạm vi check-in (km)",
        "BarberNearbyDistance": "Phạm vi tìm kiếm thợ (km)",
        "SystemTimeOffsetMinute": "Độ dời thời gian hệ thống (phút)",
        "CommissionPercentage": "Phần trăm hoa hồng trên mỗi lịch hẹn"
    };

    function DrawTable() {
        $("#sysvarTable").dataTable().fnDestroy()

        $('#sysvarTable').dataTable({
            "processing": false,
            "serverSide": false,
            "destroy": true,
            "ajax": {
                "headers": {
                    "Authorization": "Bearer " + GetAccessToken(),
                },
                "url": GetURL("sysvar/get-all-table"),
                "type": "GET"
            },
            "columns": [
                {
                    width: "7%",
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "key",
                    width: "30%",
                    render: function (data) {
                        return VARIABLE_LANGUAGES[data];
                    }
                },
                {
                    data: "value",
                    width: "10%",
                    render: function (data) {
                        var inputValue = `<input id="txtValue" type="number" class="form-control" pattern="[0-9]+([\.,][0-9]+)?" step="0.01" style="width: 9em" value="${data}"/>`;
                        return inputValue;
                    }
                },
                {
                    width: "10%",
                    data: 'key',
                    render: function (data, type, row) {
                        var updateButton = '<button type="button" class="btn btn-success" onclick="Update(this, \'' + data + '\')">Update</button>';

                        return updateButton;
                    }
                }
            ]
        });
    }

    function Update(value, name) {
        var newValue = $(value).closest("tr").find("input").val();
        if (!newValue) {
            alert("Please input selected value");
            return;
        }

        $.ajax({
            type: "POST",
            url: GetURL("system/constant/set", { "name": name, "value": newValue, "saveToDatabase": true}),
            success: function () {
                alert("Update successfully");
                if (name == 'SystemTimeOffsetMinute') {
                    GetSystemTime();
                }
            }
        });
    }

    function GetSystemTime() {
        $.ajax({
            type: "GET",
            url: GetURL("schedule/get-system-time"),
            success: function (data) {
                var tmpDate = new Date(data);
                currentSystemTime = tmpDate.getTime();
            }
        });
    }

    function StartTime() {
        if (!currentSystemTime) {
            GetSystemTime();
        }
        today = new Date(currentSystemTime);
        if (today) {
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            if (!isNaN(h)) {
                document.getElementById('txt').innerHTML =
                    h + ":" + m + ":" + s;
                currentSystemTime += 1000;
            }
        }
        var loop = setTimeout(StartTime, 1000);
    }

    function checkTime(i) {
        if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
        return i;
    }
</script>
